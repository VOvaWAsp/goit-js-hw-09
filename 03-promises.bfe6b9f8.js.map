{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAQA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAbMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAetB,SAAsBC,GACpBA,EAAMC,iBAKN,IAHA,IAAIC,EAAaC,SAASH,EAAMI,cAAcf,MAAMgB,OAChDC,EAAOH,SAASH,EAAMI,cAAcE,KAAKD,OACzCE,EAASJ,SAASH,EAAMI,cAAcG,OAAOF,OACxCG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAElCrB,EAAcqB,EADKN,GAAcM,EAAI,GAAKF,GAErCG,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBsB,QAAQC,IAAIC,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,O,IAEnF4B,OAAM,SAAAP,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBsB,QAAQC,IAAIC,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n    }\n    }, delay);\n  })\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let firstDelay = parseInt(event.currentTarget.delay.value)\n  let step = parseInt(event.currentTarget.step.value);\n  let amount = parseInt(event.currentTarget.amount.value) \n  for (let i = 1; i <= amount; i++) { \n  let currentDelay = firstDelay + (i - 1) * step;\n  createPromise(i,  currentDelay)\n      .then(({ position, delay }) => {\n        console.log(Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n      })\n      .catch(({ position, delay }) => {\n        console.log(Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`));\n      })\n    }\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","firstDelay","parseInt","currentTarget","value","step","amount","i","then","param","console","log","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.bfe6b9f8.js.map"}